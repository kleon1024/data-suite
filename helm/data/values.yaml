# Default values for data.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

hive:
  #根据机器情况调整配置
  hdfs:
    dataNode:
      replicas: 1
      resources:
        limits:
          memory: 1G
          cpu: 800m
    nameNode:
      resources:
        limits:
          memory: 1G
          cpu: 800m
    conf:
      coreSite:
        hadoop.proxyuser.hdfs.hosts: "*"
        hadoop.proxyuser.hdfs.groups: "*"
      httpfsSite:
        httpfs.proxyuser.hue.hosts: "*"
        httpfs.proxyuser.hue.groups: "*"
      hdfsSite:
        dfs.replication: 1
        dfs.permissions.enabled: false
hue:
  hue:
    ini: |
      [desktop]
        app_blacklist=search,hbase,security,jobbrowser,oozie
      [beeswax]
        hive_server_host=data-hive-server
        hive_server_port=10000
        thrift_version=7
      [hadoop]
      [[hdfs_clusters]]
      [[[default]]]
        fs_defaultfs=hdfs://data-hdfs:8020
        webhdfs_url=http://data-hdfs-httpfs:14000/webhdfs/v1
    interpreters: |
      [[[postgresql]]]
        name = postgresql
        interface=sqlalchemy
        options='{"url": "postgresql://hue:hue@hue-postgres:5432/hue"}'
      [[[hive]]]
        name=Hive
        interface=hiveserver2